//====================================================================================================
// Code generated with Momentum: DAC Gen (Build 2.5.4750.27570)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by Administrator at SAPSERVER on 08/11/2013 16:34:08 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;
using fMessagingSystem.Entities;

namespace fMessagingSystem.Data
{
    /// <summary>
    /// GSMError data access component. Manages CRUD operations for the GSMError table.
    /// </summary>
    public partial class GSMErrorDAC : DataAccessComponent
    {

        /// <summary>
        /// Returns a row from the GSMError table.
        /// </summary>
        /// <param name="errorCode">A ErrorCode value.</param>
        /// <returns>A GSMError object with data populated from the database.</returns>
        public GSMError SelectById(string errorCode)
        {
            DatabaseFactory.SetDatabaseProviderFactory(new DatabaseProviderFactory(), false);

            const string SQL_STATEMENT =
                "SELECT [ErrorCode], [ErrorText] " +
                "FROM dbo.GSMError  " +
                "WHERE [ErrorCode]=@ErrorCode ";

            GSMError gSMError = null;

            // Connect to database.
            Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);
            using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))
            {
                db.AddInParameter(cmd, "@ErrorCode", DbType.String, errorCode);

                using (IDataReader dr = db.ExecuteReader(cmd))
                {
                    if (dr.Read())
                    {
                        // Create a new GSMError
                        gSMError = new GSMError();

                        // Read values.
                        gSMError.ErrorCode = base.GetDataValue<string>(dr, "ErrorCode");
                        gSMError.ErrorText = base.GetDataValue<string>(dr, "ErrorText");
                    }
                }
            }

            return gSMError;
        }


















    }
}